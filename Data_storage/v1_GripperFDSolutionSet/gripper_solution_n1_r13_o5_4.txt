INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /home/yochan-ubuntu19/anaconda3/envs/PDDLtraceGen/bin/python3 /home/yochan-ubuntu19/Fastdownward/builds/release/bin/translate/translate.py ./gripper_domain.pddl ./GripperProblemSet/gripper_problems_n1_r13_o5_4.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 20 rules.
Computing model... [0.010s CPU, 0.004s wall-clock]
583 relevant atoms
256 auxiliary atoms
839 final queue length
1316 total queue pushes
Completing instantiation... [0.000s CPU, 0.007s wall-clock]
Instantiating: [0.020s CPU, 0.013s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
2 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.000s CPU, 0.009s wall-clock]
130 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
6 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.004s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
2 of 8 mutex groups necessary.
416 of 416 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 92
Translator goal facts: 5
Translator mutex groups: 2
Translator total mutex groups size: 12
Translator operators: 416
Translator axioms: 0
Translator task size: 2015
Translator peak memory: 30512 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.040s CPU, 0.034s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/yochan-ubuntu19/Fastdownward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.4425e-05s, 9680 KB] reading input...
[t=0.00120942s, 9680 KB] done reading input!
[t=0.00214706s, 10068 KB] Initializing landmarks count heuristic...
[t=0.00220081s, 10068 KB] Initializing Exploration...
[t=0.00236813s, 10216 KB] Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
[t=0.00313022s, 10216 KB] approx. obedient reasonable orders
[t=0.00316447s, 10216 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00367136s, 10216 KB] Landmarks generation time: 0.0015099s
[t=0.0036983s, 10216 KB] Discovered 20 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.00371542s, 10216 KB] 29 edges
[t=0.00384665s, 10216 KB] Simplifying 676 unary operators... done! [676 unary operators]
[t=0.00411685s, 10216 KB] time to simplify: 0.00030276s
[t=0.00417692s, 10216 KB] Initializing additive heuristic...
[t=0.00419906s, 10216 KB] Initializing FF heuristic...
[t=0.0042596s, 10216 KB] Building successor generator...done!
[t=0.00441364s, 10216 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00442972s, 10216 KB] time for successor generation creation: 9.8527e-05s
[t=0.00444897s, 10216 KB] Variables: 8
[t=0.00446521s, 10216 KB] FactPairs: 92
[t=0.00448067s, 10216 KB] Bytes per state: 4
[t=0.00454637s, 10216 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00459222s, 10216 KB] 6 initial landmarks, 5 goal landmarks
[t=0.00463039s, 10216 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 14
[t=0.00465033s, 10216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.00466735s, 10216 KB] g=0, 1 evaluated, 0 expanded
[t=0.00469469s, 10216 KB] Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 14
[t=0.00471287s, 10216 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.00486343s, 10216 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 13
[t=0.00488395s, 10216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.00490116s, 10216 KB] g=1, 10 evaluated, 9 expanded
[t=0.00502664s, 10216 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 12
[t=0.00506105s, 10216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.00507735s, 10216 KB] g=3, 17 evaluated, 16 expanded
[t=0.00510997s, 10216 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 11
[t=0.00512807s, 10216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.00514405s, 10216 KB] g=4, 18 evaluated, 17 expanded
[t=0.00524566s, 10216 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 10
[t=0.00526433s, 10216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.00528061s, 10216 KB] g=6, 24 evaluated, 23 expanded
[t=0.00531237s, 10216 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 9
[t=0.00533092s, 10216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.00534725s, 10216 KB] g=7, 25 evaluated, 24 expanded
[t=0.00543041s, 10216 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
[t=0.00544879s, 10216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.00546481s, 10216 KB] g=8, 30 evaluated, 29 expanded
[t=0.00549617s, 10216 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
[t=0.00551421s, 10216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.00553027s, 10216 KB] g=9, 31 evaluated, 30 expanded
[t=0.00560392s, 10216 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
[t=0.00562224s, 10216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.00563826s, 10216 KB] g=11, 35 evaluated, 34 expanded
[t=0.00566924s, 10216 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
[t=0.00568735s, 10216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.00570333s, 10216 KB] g=12, 36 evaluated, 35 expanded
[t=0.00575775s, 10216 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[t=0.00577981s, 10216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.00579692s, 10216 KB] g=13, 39 evaluated, 38 expanded
[t=0.0058279s, 10216 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
[t=0.00584615s, 10216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0058623s, 10216 KB] g=14, 40 evaluated, 39 expanded
[t=0.00590471s, 10216 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
[t=0.00592282s, 10216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.00593878s, 10216 KB] g=16, 42 evaluated, 41 expanded
[t=0.00596725s, 10216 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
[t=0.00598511s, 10216 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.00600109s, 10216 KB] g=17, 43 evaluated, 42 expanded
[t=0.00604153s, 10216 KB] Solution found!
[t=0.0060597s, 10216 KB] Actual search time: 0.00146065s
pick robot1 ball4 room10 lgripper1 (1)
move robot1 room10 room12 (1)
drop robot1 ball4 room12 lgripper1 (1)
move robot1 room12 room10 (1)
move robot1 room10 room13 (1)
pick robot1 ball3 room13 lgripper1 (1)
move robot1 room13 room10 (1)
drop robot1 ball3 room10 lgripper1 (1)
move robot1 room10 room11 (1)
move robot1 room11 room4 (1)
pick robot1 ball1 room4 lgripper1 (1)
move robot1 room4 room11 (1)
drop robot1 ball1 room11 lgripper1 (1)
move robot1 room11 room2 (1)
move robot1 room2 room5 (1)
pick robot1 ball5 room5 lgripper1 (1)
move robot1 room5 room2 (1)
drop robot1 ball5 room2 lgripper1 (1)
[t=0.00607771s, 10216 KB] Plan length: 18 step(s).
[t=0.00607771s, 10216 KB] Plan cost: 18
[t=0.00607771s, 10216 KB] Expanded 43 state(s).
[t=0.00607771s, 10216 KB] Reopened 0 state(s).
[t=0.00607771s, 10216 KB] Evaluated 44 state(s).
[t=0.00607771s, 10216 KB] Evaluations: 88
[t=0.00607771s, 10216 KB] Generated 569 state(s).
[t=0.00607771s, 10216 KB] Dead ends: 0 state(s).
[t=0.00607771s, 10216 KB] Number of registered states: 44
[t=0.00607771s, 10216 KB] Int hash set load factor: 44/64 = 0.6875
[t=0.00607771s, 10216 KB] Int hash set resizes: 6
[t=0.00607771s, 10216 KB] Search time: 0.00153188s
[t=0.00607771s, 10216 KB] Total time: 0.00607771s
Solution found.
Peak memory: 10216 KB
Remove intermediate file output.sas
search exit code: 0

