INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /home/yochan-ubuntu19/anaconda3/envs/PDDLtraceGen/bin/python3 /home/yochan-ubuntu19/Fastdownward/builds/release/bin/translate/translate.py ./gripper_domain.pddl ./GripperProblemSet/gripper_problems_n1_r7_o7_2.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 20 rules.
Computing model... [0.010s CPU, 0.003s wall-clock]
369 relevant atoms
184 auxiliary atoms
553 final queue length
834 total queue pushes
Completing instantiation... [0.000s CPU, 0.004s wall-clock]
Instantiating: [0.010s CPU, 0.009s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
2 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.010s CPU, 0.006s wall-clock]
98 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Reordering and filtering variables...
10 of 10 variables necessary.
2 of 10 mutex groups necessary.
238 of 238 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 10
Translator derived variables: 0
Translator facts: 74
Translator goal facts: 7
Translator mutex groups: 2
Translator total mutex groups size: 16
Translator operators: 238
Translator axioms: 0
Translator task size: 1311
Translator peak memory: 30000 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.020s CPU, 0.023s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/yochan-ubuntu19/Fastdownward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_rhw(reasonable_orders=true),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.5096e-05s, 9680 KB] reading input...
[t=0.000768033s, 9680 KB] done reading input!
[t=0.0016124s, 9936 KB] Initializing landmarks count heuristic...
[t=0.00165868s, 9936 KB] Initializing Exploration...
[t=0.00176985s, 10076 KB] Generating landmarks using the RPG/SAS+ approach
approx. reasonable orders
[t=0.00234925s, 10076 KB] approx. obedient reasonable orders
[t=0.00238574s, 10076 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00279918s, 10076 KB] Landmarks generation time: 0.00117276s
[t=0.00282256s, 10076 KB] Discovered 26 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.00283826s, 10076 KB] 42 edges
[t=0.00292642s, 10076 KB] Simplifying 434 unary operators... done! [434 unary operators]
[t=0.00311552s, 10076 KB] time to simplify: 0.000214175s
[t=0.00315939s, 10076 KB] Initializing additive heuristic...
[t=0.00317758s, 10076 KB] Initializing FF heuristic...
[t=0.00323606s, 10076 KB] Building successor generator...done!
[t=0.00334929s, 10076 KB] peak memory difference for successor generator creation: 0 KB
[t=0.003364s, 10076 KB] time for successor generation creation: 6.2129e-05s
[t=0.00338215s, 10076 KB] Variables: 10
[t=0.00339851s, 10076 KB] FactPairs: 74
[t=0.0034139s, 10076 KB] Bytes per state: 8
[t=0.00347541s, 10076 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00351554s, 10076 KB] 8 initial landmarks, 7 goal landmarks
[t=0.0035543s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 18
[t=0.00357343s, 10076 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.00358964s, 10076 KB] g=0, 1 evaluated, 0 expanded
[t=0.00361341s, 10076 KB] Initial heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 18
[t=0.00363098s, 10076 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.00376343s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 17
[t=0.0037835s, 10076 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.00379969s, 10076 KB] g=2, 10 evaluated, 9 expanded
[t=0.00382928s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 16
[t=0.0038523s, 10076 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.00386866s, 10076 KB] g=3, 11 evaluated, 10 expanded
[t=0.00395352s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 15
[t=0.00397221s, 10076 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.00398817s, 10076 KB] g=4, 17 evaluated, 16 expanded
[t=0.00401681s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 14
[t=0.00403455s, 10076 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.00405035s, 10076 KB] g=5, 18 evaluated, 17 expanded
[t=0.00412391s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 13
[t=0.00414241s, 10076 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.00415829s, 10076 KB] g=7, 23 evaluated, 22 expanded
[t=0.00422734s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 12
[t=0.00424602s, 10076 KB] g=8, 28 evaluated, 27 expanded
[t=0.0042755s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 11
[t=0.00429381s, 10076 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.00430964s, 10076 KB] g=9, 29 evaluated, 28 expanded
[t=0.00437151s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 10
[t=0.00439057s, 10076 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.00440653s, 10076 KB] g=10, 33 evaluated, 32 expanded
[t=0.00446688s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 9
[t=0.00448535s, 10076 KB] g=12, 37 evaluated, 36 expanded
[t=0.00451426s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 8
[t=0.00453218s, 10076 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.00455152s, 10076 KB] g=13, 38 evaluated, 37 expanded
[t=0.0046011s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 7
[t=0.00461935s, 10076 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.00463524s, 10076 KB] g=14, 41 evaluated, 40 expanded
[t=0.00468502s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 6
[t=0.00470336s, 10076 KB] g=16, 44 evaluated, 43 expanded
[t=0.0047312s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 5
[t=0.00474921s, 10076 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.004765s, 10076 KB] g=17, 45 evaluated, 44 expanded
[t=0.00479335s, 10076 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.00481119s, 10076 KB] g=18, 46 evaluated, 45 expanded
[t=0.0048511s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 4
[t=0.00486914s, 10076 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.00488481s, 10076 KB] g=19, 48 evaluated, 47 expanded
[t=0.00492173s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 3
[t=0.00493983s, 10076 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.00495561s, 10076 KB] g=20, 50 evaluated, 49 expanded
[t=0.00499117s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 2
[t=0.00500912s, 10076 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.00502478s, 10076 KB] g=21, 52 evaluated, 51 expanded
[t=0.00505167s, 10076 KB] New best heuristic value for lmcount(lm_factory = lm_rhw(reasonable_orders = true), transform = adapt_costs(one), pref = false): 1
[t=0.00506989s, 10076 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.00508574s, 10076 KB] g=22, 53 evaluated, 52 expanded
[t=0.00510992s, 10076 KB] Solution found!
[t=0.00512856s, 10076 KB] Actual search time: 0.00160793s
move robot1 room1 room3 (1)
pick robot1 ball2 room3 lgripper1 (1)
move robot1 room3 room1 (1)
drop robot1 ball2 room1 lgripper1 (1)
move robot1 room1 room2 (1)
move robot1 room2 room4 (1)
pick robot1 ball1 room4 lgripper1 (1)
pick robot1 ball5 room4 rgripper1 (1)
move robot1 room4 room2 (1)
drop robot1 ball1 room2 lgripper1 (1)
move robot1 room2 room5 (1)
pick robot1 ball3 room5 lgripper1 (1)
move robot1 room5 room2 (1)
drop robot1 ball3 room2 lgripper1 (1)
move robot1 room2 room6 (1)
pick robot1 ball6 room6 lgripper1 (1)
move robot1 room6 room2 (1)
move robot1 room2 room7 (1)
drop robot1 ball5 room7 rgripper1 (1)
pick robot1 ball4 room7 rgripper1 (1)
drop robot1 ball6 room7 lgripper1 (1)
move robot1 room7 room2 (1)
drop robot1 ball4 room2 rgripper1 (1)
[t=0.00514681s, 10076 KB] Plan length: 23 step(s).
[t=0.00514681s, 10076 KB] Plan cost: 23
[t=0.00514681s, 10076 KB] Expanded 53 state(s).
[t=0.00514681s, 10076 KB] Reopened 0 state(s).
[t=0.00514681s, 10076 KB] Evaluated 54 state(s).
[t=0.00514681s, 10076 KB] Evaluations: 108
[t=0.00514681s, 10076 KB] Generated 435 state(s).
[t=0.00514681s, 10076 KB] Dead ends: 0 state(s).
[t=0.00514681s, 10076 KB] Number of registered states: 54
[t=0.00514681s, 10076 KB] Int hash set load factor: 54/64 = 0.84375
[t=0.00514681s, 10076 KB] Int hash set resizes: 6
[t=0.00514681s, 10076 KB] Search time: 0.00167195s
[t=0.00514681s, 10076 KB] Total time: 0.00514681s
Solution found.
Peak memory: 10076 KB
Remove intermediate file output.sas
search exit code: 0

